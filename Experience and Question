#Experience:
1. __REACT_DEVTOOLS_GLOBAL_HOOK__ = parent.__REACT_DEVTOOLS_GLOBAL_HOOK__ 
是因为引用了React Developer Tool（chrome 应用商店）， 并且因为Yeoman把真实的代码用iframe嵌入进去，　所以需要parent!
2.
imageData.forEach(function(value,index){
  imageFigure.push(<ImgFigureComponent data={value} key={index}/>);
});//如果没有key 属性，会有这个Warning: Each child in an array or iterator should have a unique "key" prop. Check the render method of `AppComponent`
3. 在scss 文件中，在子样式嵌套在父样式中，需要用@at-root{}把子样式包起来，这样做使得编译出来的css和父样式同层，避免了性能问题
4. 
scrollWidth：对象的实际内容的宽度，不包边线宽度，会随对象中内容超过可视区后而变大。 
clientWidth：对象内容的可视区的宽度，不包滚动条等边线，会随对象显示大小的变化而改变。 
offsetWidth：对象整体的实际宽度，包滚动条等边线，会随对象显示大小的变化而改变。
5. 箭头函数的用法
//let getRangeRandom = (low, high) => (Math.floor(Math.random()*(high - low) + low));//向下取整
let getRangeRandom = (low, high) => {return (Math.floor(Math.random()*(high - low) + low))}; //如果函数体很多代码行，用{}括起来，并且需要有return 语句
//let getRangeRandom = (low, high) => ({a: 0, b: 0});//如果直接返回一个对象，需要用（）把对象扩起来

# Question:
1. 为什么不能把url提取出来？
let url = '../images/' + item.fileName;
//let imageUrl = require(url); //Cannot get the image
let imageUrl = require('../images/' + item.fileName); //Can get the image
Tip: 发现最终console 出来的imageurl 是"imageUrl":"/assets/fdb9290590198d8d1d9fa23bdd296c86.jpg"}

2. 为什么会有下面这些奇怪的现象？是因为global 和开发环境安装了不同版本的webpack吗？
用"json-loader": "^0.5.4","webpack": "^1.12.0", 在这个项目，但是本机global 已经安装了webpack3.0.0，
a. 有时package.json和cfg/default.js 不需要配置json-loader，也可以直接require('../data/imageData.json'); 官网说webpack2.0 以上自带了json-loader 的功能，不需要再引用进来
b. 有时会就需要package.json和cfg/default.js配置json-loader,并且npm install --save-dev json-loader@0.5.4, 并且用require('json!../data/imageData.json');
c. 有时候第二种也不行，就需要改成require('../data/imageData.json'); require('!json!../data/imageData.json');才能生效，要不然会报Module build failed: SyntaxError: Unexpected token m
d. 2017/7/7我uninstall了本机global的webpack3.0.0,并且require('../data/imageData.json');可以生效，需要看看重启之后会怎样!


